name: CI/CD for API Platform and VueJS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Env file
        run: |
          echo "VITE_BACKEND_URL=${{secrets.VITE_BACKEND_URL}}" >> ./front/.env \
          echo "BASE_URL=${{secrets.BASE_URL}}" >> ./front/.env \
          echo "TRUSTED_PROXIES=${{secrets.TRUSTED_PROXIES}}" >> ./api/.env \
          echo "TRUSTED_HOSTS=${{secrets.TRUSTED_HOSTS}}" >> ./api/.env \
          echo "APP_ENV=${{secrets.APP_ENV}}" >> ./api/.env \
          echo "APP_SECRET=${{secrets.APP_SECRET}}" >> ./api/.env \
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> ./api/.env \
          echo "CORS_ALLOW_ORIGIN=${{secrets.CORS_ALLOW_ORIGIN}}" >> ./api/.env \
          echo "MERCURE_URL=${{secrets.MERCURE_URL}}" >> ./api/.env \
          echo "MERCURE_PUBLIC_URL=${{secrets.MERCURE_PUBLIC_URL}}" >> ./api/.env \
          echo "MERCURE_JWT_SECRET=${{secrets.MERCURE_JWT_SECRET}}" >> ./api/.env \
          echo "JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}}" >> ./api/.env \
          echo "JWT_PUBLIC_KEY=${{secrets.JWT_PUBLIC_KEY}}" >> ./api/.env \
          echo "JWT_PASSPHRASE=${{secrets.JWT_PASSPHRASE}}" >> ./api/.env \
          echo "MAILER_FROM=${{secrets.MAILER_FROM}}" >> ./api/.env \
          echo "MAILER_PASSWORD=${{secrets.MAILER_PASSWORD}}" >> ./api/.env \
          echo "MAILER_SERVER=${{secrets.MAILER_SERVER}}" >> ./api/.env \
          echo "MAILER_PORT=${{secrets.MAILER_PORT}}" >> ./api/.env \
          echo "MAILER_DSN=${{secrets.MAILER_DSN}}" >> ./api/.env
        
      - name: test
        run: |
          cat .env \
          cat ./api/.env \
          cat ./front/.env
#      - name: Set up Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 16
#
#      - name: Install Frontend dependencies
#        working-directory: front/
#        run: |
#          npm install
#
#      - name: Build Frontend
#        working-directory: front/
#        run: |
#          npm run build --pull --no-cache
#
#      - name: Build Backend
#        working-directory: api/
#        run: |
#          docker-compose build --no-cache

        # -e VITE_PORT=${secrets.VITE_PORT} \
        # -e VITE_BACKEND_URL=${secrets.VITE_BACKEND_URL} \
        # -e BASE_URL=${secrets.BASE_URL}  \
        # -e TRUSTED_PROXIES=${secrets.TRUSTED_PROXIES} \
        # -e TRUSTED_HOSTS=${secrets.TRUSTED_HOSTS} \
        # -e APP_ENV=${secrets.APP_ENV} \
        # -e APP_SECRET=${secrets.APP_SECRET} \
        # -e DATABASE_URL=${secrets.DATABASE_URL} \
        # -e CORS_ALLOW_ORIGIN=${secrets.CORS_ALLOW_ORIGIN} \
        # -e MERCURE_URL=${secrets.MERCURE_URL} \
        # -e MERCURE_PUBLIC_URL=${secrets.MERCURE_PUBLIC_URL} \
        # -e MERCURE_JWT_SECRET=${secrets.MERCURE_JWT_SECRET} \
        # -e JWT_SECRET_KEY=${secrets.JWT_SECRET_KEY} \
        # -e JWT_PUBLIC_KEY=${secrets.JWT_PUBLIC_KEY} \
        # -e JWT_PASSPHRASE=${secrets.JWT_PASSPHRASE} \
        # -e MAILER_FROM=${secrets.MAILER_FROM} \
        # -e MAILER_PASSWORD=${secrets.MAILER_PASSWORD} \
        # -e MAILER_SERVER=${secrets.MAILER_SERVER} \
        # -e MAILER_PORT=${secrets.MAILER_PORT} \
        # -e MAILER_DSN=${secrets.MAILER_DSN}

#      - name: Start Backend
#        run: |
#          docker-compose up -d
#
#      - name: Push to Docker Hub
#        uses: docker/build-push-action@v2
#        with:
#          context: api
#          push: true
#          tags: thepiotrow/api-platform-backend:latest

      # - name: Deploy to OVH VPS
      #   uses: ovh/actions/server-deploy@main
      #   with:
      #     access_key: ${{ secrets.OVH_ACCESS_KEY }}
      #     secret_key: ${{ secrets.OVH_SECRET_KEY }}
      #     endpoint: ovh-eu
      #     server_name: my-vps
      #     command: |
      #       scp api/docker-compose.yml my-vps:/root/api-platform
      #       ssh my-vps "cd ~/api-platform && docker-compose up -d"
