name: CI/CD for API Platform

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Env file
        run: |
          touch ./api/.env ./front/.env

      - name: Inject secrets
        run: |
          envsubst < ./api/.env.ci > ./api/.env
          envsubst < ./api/.env.ci > ./front/.env

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Frontend dependencies
        working-directory: front/
        run: |
          npm install

      - name: Build Frontend
        working-directory: front/
        run: |
          npm run build

      - name: Pull Docker Images
        run: docker compose pull --ignore-pull-failures || true

      - name: Start Docker Services
        run: docker compose up --build -d

      - name: Wait Docker Services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker compose ps -q php)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                docker compose ps
                docker compose logs
                exit 1
              ;;
            esac
          done
          exit 1

      - name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost

      - name: Check HTTPS reachability
        run: curl  -vk -o /dev/null https://localhost

      - name: Create test database
        run: |
          docker compose exec -T php bin/console -e test doctrine:database:create
          docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: api
          push: true
          tags: thepiotrow/api-platform-backend:latest

      # - name: Deploy to OVH VPS
      #   uses: ovh/actions/server-deploy@main
      #   with:
      #     access_key: ${{ secrets.OVH_ACCESS_KEY }}
      #     secret_key: ${{ secrets.OVH_SECRET_KEY }}
      #     endpoint: ovh-eu
      #     server_name: my-vps
      #     command: |
      #       scp api/docker-compose.yml my-vps:/root/api-platform
      #       ssh my-vps "cd ~/api-platform && docker-compose up -d"
